{
  "menu_about": {
    "zh": "关于",
    "us": "about"
  },
  "menu_future": {
    "zh": "未来",
    "us": "future"
  },
  "menu_white_book": {
    "zh": "白皮书",
    "us": "white paper"
  },
  "menu_news": {
    "zh": "Blog",
    "us": "Blog"
  },
  "menu_downloads": {
    "zh": "下载",
    "us": " Download "
  },
  "menu_Binaries": {
    "zh": "二进制",
    "us": "Binaries"
  },
  "menu_Source_code": {
    "zh": "源码",
    "us": "Source Code"
  },
  "lead": {
    "zh": "一种基于Bitcoin Cash的智能合约实现方案",
    "us": "Wormhole — BCH smart contract"
  },
  "feature_1": {
    "zh": "高速",
    "us": "High-speed"
  },
  "feature_1_1": {
    "zh": "快速确认",
    "us": "Faster confirmation"
  },
  "feature_2": {
    "zh": "智能合约",
    "us": "Smart contract"
  },
  "feature_2_1": {
    "zh": "高性能的图灵完备语言支持",
    "us": "Supported by high-performance turing-complete programing language"
  },
  "feature_3": {
    "zh": "低手续费",
    "us": "Low fees"
  },
  "feature_3_1": {
    "zh": "全世界无缝流通",
    "us": "Global frictionless market"
  },
  "feature_4": {
    "zh": "可扩展",
    "us": "Scalability"
  },
  "feature_4_1": {
    "zh": "不用修改原有共识即可扩展",
    "us": "Achieve scalability without changing the consensus protocol"
  },
  "feature_5": {
    "zh": "去中心化",
    "us": "Decentralization"
  },
  "feature_5_1": {
    "zh": "基于Bitcoin Cash的去中心化实现",
    "us": "Decentralization on BCH"
  },
  "feature_6": {
    "zh": "安全",
    "us": "Security"
  },
  "feature_6_1": {
    "zh": "二层安全模型",
    "us": "Two-tier security approach"
  },
  "title_1": {
    "zh": "基于Bitcoin Cash的智能合约实现方案",
    "us": "Wormhole protocol —— BCH smart contract"
  },
  "title_1_1": {
    "zh": "我们一直在探索一种不改变共识的情况实现在BCH上实现智能合约的方案，我们关注到了[OmniLayer](https://www.omnilayer.org/)方案，它是一种利用op_return操作码实现发token的方案。Wormhole Cash 是基于OmniLayer协议在BCH上实现发Token功能的一种解决方案。",
    "us": "We have been trying to explore different ways to implement smart contracts on Bitcoin Cash without changing the consensus rules. After tremendous research effort, we have discovered a protocol which can issue tokens through the OP_RETURN opcode: the Omni Layer (https://www.omnilayer.org/). Based on the Omni Layer protocol,  Wormhole Cash makes it possible to issue tokens on BCH."
  },
  "title_2": {
    "zh": "未来发展",
    "us": "Future Development"
  },
  "title_2_1": {
    "zh": "无许可的智能合约",
    "us": "Permissionless smart contract"
  },
  "title_2_2": {
    "zh": "Omni Layer本身不是一种无许可创新的机制。任何新型的合约类型，都必须被合并到程序代码之中才能够被识别。我们会在散逸阶段，实现无许可的智能合约平台。也就是说，在遵守维护协议安全的必要规则后，任何开发者都可以发布智能合约到网络中运行。",
    "us": " The Omni Layer is not a mechanism for permissionless innovation. Only through integration into the program code can new contracts be recognized. We will create a permissionless smart contract platform in the Exophere phase. That is to say, any developer can deploy a smart contract in the network while they comply with corresponding rules for maintaining protocol security."
  },
  "title_2_3": {
    "zh": "去中心化交易协议",
    "us": "Decentralized exchange protocol "
  },
  "title_2_4": {
    "zh": "底层协议支持的去中心化交易所，任何人都可以创建自己的交易所。",
    "us": "Anyone can create their own decentralized exchange supported on protocol."
  },
  "title_2_5": {
    "zh": "ERC721",
    "us": "ERC721 "
  },
  "title_2_6": {
    "zh": "Non-Fungible Tokens:不可互换的Token, 英文简写为\"NFT\"，简单理解为每个Token都是独一无二的。也就是说ERC721的每个Token都拥有独立唯一的tokenId编号。",
    "us": "Non-Fungible Tokens (NFT) is the term given to the unique nature of the tokens. Each ERC721 token has an unique and independent token ID."
  },
  "title_2_7": {
    "zh": "智能合约",
    "us": "A new generation of smart contract virtual machine "
  },
  "title_2_8": {
    "zh": "新一代的智能合约虚拟机。Solidity作为智能合约这一古老概念被真正实现的语言，受到了计算机专家的广泛审视。近些年也有更好的想法被提出来。我们将考虑开发一些新型编程语言的虚拟机，让最有效率、开发者基础最广泛的计算机语言被用于构建DApps。",
    "us": "As a contract-oriented language that can be applied to a variety of different blockchain platforms, Solidity has borne scrutiny from computer experts in recent years. More new ideas are generated these years. We will develop new virtual machines using programming languages to allow the most efficient and developers-friendly computer languages available for building DApps."
  }
}
